#!/bin/bash

# get.version
# ===========
# R.J.Barnes
#
# Purpose:
#
# Get the version number of a an element.
#
# Syntax:
#
# get.version [path]
#
# Description:
#
# Get the version number of an element.
#
# Modified by SGS Feb 28, 2017 to use directory name instead of hidden
#  .rst/version file.
#
#  Directory names must follow the convention:
#
#  .../name.major.minor/...
#
#  where major and minor are integer version numbers.

##############################################################################

prm=${#}
if test ${prm} -ne 0 ; then
  path=${1}
else
  path="."
fi

if test ! -d ${path} ; then
  echo "No such directory"
  exit 1
fi

# search for a directory that satisfies the convention: name.major.minor
while [ ${path} != "/" ] ; do
  dir=${path##*/}
  # echo "<${dir}>"  # uncomment to see directories
  if [[ ${#dir} -lt 5 ]] ; then  # /.. satisfies *.*.* but is not a version
    path=`dirname ${path}`
		continue
  else
    path=`dirname ${path}`
  fi

  if [[ ${dir} == *.*.* ]] ; then  # we have a directory in the correct format
    gotit=${dir}
    break
  fi
done

vmajor=`echo ${gotit} | cut -f 2 -d .`
vminor=`echo ${gotit} | cut -f 3 -d .`
echo ${vmajor}.${vminor}

exit 0

# leaving old method

vfile=${path}/.rst/version
 
if test -d ${path}/.git ; then
  # Rob's git stuff?
  vstr=`git --git-dir ${path}/.git describe`
elif test -s ${vfile} ; then
  # use last line of the hidden .rst/version file
  vstr=`tail -1 ${vfile}`
else
  # default, which still works because of symbolic links
  vstr="version.x.x"
fi

echo ${vstr#version.}

exit 0
