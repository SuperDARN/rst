<?xml version="1.0" encoding="ISO-8859-1"?>
<binary>
<project>general</project>
<name>etime</name>
<location>src.bin/task/etime</location>
<syntax>etime --help</syntax>
<syntax>etime [-day] [-year] [<ar>name</ar>]</syntax>

<option><on>--help</on><od>print the help message and exit.</od>
</option>
<option><on>--version</on><od>print the RST version number and exit.</od>
</option>
<option><on>-day</on><od>print second of day, not second of epoch.</od>
</option>
<option><on>-year</on><od>print second of year, not second of epoch.</od>
</option>
<option><on><ar>name</ar></on><od>filename of the ASCII file, if this is omitted the file will be read from standard input.</od>
</option>
<synopsis><p>Convert the time in a plain ASCII listing to seconds of epoch or seconds of day.</p></synopsis>

<description>
<p>Converts the date and time recorded in a text data file into a time expressed as seconds from 0:00UT January 1, 1970, seconds from the start of the year, or seconds from the start of a day.</p>
<p>The reformatted text file is written to standard output.</p>
<p>Each line of the data file should consist of a single record. Entries in the record should be space or tab separated and the first six numbers represent the date and time of the record:</p>

<quote>year month day hour minute seconds data...</quote>

<p>The remainder of the line is the record data.</p>
<p>The program converts the time to the number of seconds from 0:00UT January 1, 1970, or if the "<code>-d</code>" option is specified to the number of seconds from the start of the day.</p>
<p>The converted time followed by the remainder of the record data is written to standard output.</p>
</description>

<example>
<command>etime data.txt &gt; data.2.txt</command>
<description>Convert the times in the file "<code>data.txt</code>" to seconds from 0:00UT January 1,1970. The output is written to the file "<code>data.2.txt</code>".</description>
</example>

<example>
<command>etime -d data.txt &gt; data.2.txt</command>
<description>Convert the times in the file "<code>data.txt</code>" to seconds from the start of the day. The output is written to the file "<code>data.2.txt</code>".</description>
</example>

</binary>
